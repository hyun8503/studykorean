{"version":3,"sources":["stores/AuthStore.js","stores/ProfileStore.js","stores/UserStore.js","stores/index.js","views/ProfileDialog.js","components/TopBar.js","components/SideMenu.js","components/ScrollToTop.js","components/reactPayPal.js","views/Home.js","views/SignIn.js","views/SignUp.js","App.js","serviceWorker.js","index.js","configureTheme.js"],"names":["State","EmptySignup","id","password","name","email","country","city","userLanguage","selectedLanguage","type","createdDatetime","updatedDatetime","EmptyLogin","EmptyUser","AuthStore","doSignup","flow","callback","callback_failed","this","loginState","axios","post","status","loginToken","doLogin","param","login","response","token","data","user","localStorage","setItem","console","log","loginUser","Object","assign","checkLogin","getItem","get","doLogout","removeItem","observable","action","ProfileStore","value","isProfileDialog","newUser","UserStore","signUp","addUser","stores","authStore","profileStore","userStore","ProfileDialog","inject","observer","props","classes","Dialog","fullScreen","className","dialog","open","onClose","changeProfileDialog","disableBackdropClick","disableEscapeKeyDown","DialogTitle","title","src","alt","style","width","height","float","onClick","DialogContent","margin","padding","root","Table","TableRow","React","Component","withStyles","theme","borderRadius","maxHeight","minHeight","backgroundColor","textAlign","fontFamily","fontSize","fontWeight","useStyles","makeStyles","appBar","zIndex","drawer","color","paddingRight","paddingLeft","toolBar","breakpoints","down","formControl","inputBase","flexCenter","display","justifyContent","justifyItems","inlineCenter","TopBar","isLoggedIn","mobileOpen","setMobileOpen","useContext","MobXProviderContext","history","useHistory","AppBar","position","Toolbar","Container","Grid","item","xs","sm","push","FormControl","InputBase","fullWidth","placeholder","inputProps","endAdornment","Search","IconButton","AccountCircle","marginTop","up","drawerWidth","flexShrink","mixins","toolbar","drawerPaper","border","palette","primary","main","boxShadow","logo","marginLeft","marginRight","menu","borderRight","link","textDecoration","ScrollToTop","prevProps","location","pathname","window","scrollTo","children","ReactPayPal","useState","paid","setPaid","error","paypalRef","useRef","useEffect","paypal","Buttons","createOrder","actions","order","create","intent","purchase_units","description","amount","currency_code","onApprove","a","capture","onError","err","render","current","ref","Home","state","checkout","enqueueSnackbar","variant","Fragment","component","mainContainer","appBarSpacer","mainContent","Typography","setState","container","cardContainer","Card","lessonCard","withSnackbar","withRouter","flexGrow","spacing","flexDirection","alignItems","SignIn","handleChangeId","e","changeLoginId","target","handleChangePassword","changeLoginPassword","handleKeyUpPassword","keyCode","handleSubmitForm","maxWidth","paper","Avatar","lockOutAvatar","store","form","TextField","label","onChange","required","onKeyUp","Button","submit","disabled","CircularProgress","size","href","lockOpenAvatar","secondary","SignUp","TableContainer","Paper","TableHead","TableCell","align","colSpan","TableBody","InputLabel","htmlFor","Select","native","aria-label","TableFooter","App","bind","interceptors","request","use","config","headers","Promise","reject","invalidateLogin","CssBaseline","path","exact","Boolean","hostname","match","configure","enforceActions","createMuiTheme","ReactDOM","ThemeProvider","maxSnack","anchorOrigin","vertical","horizontal","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9174bf31.chunk.js","sourcesContent":["import {action, flow, observable} from \"mobx\";\nimport axios from \"axios\";\n\nexport const State = {\n    Authenticated: 'Authenticated',\n    NotAuthenticated: 'NotAuthenticated',\n    Pending: 'Pending',\n    Failed: 'Failed',\n    SignupPending: 'SignupPending',\n    SignupFailed: 'SignupFailed'\n};\n\nexport const LocalStorageTokenKey = '_BASKITOP_AUTHENTICATION_TOKEN_';\n\n\nconst EmptySignup = {\n    id: '',\n    password: '',\n    name: '',\n    email: '',\n    country: '',\n    city:'',\n    userLanguage:'',\n    selectedLanguage:'',\n    type: '',\n    createdDatetime: '',\n    updatedDatetime: '',\n};\n\n\nconst EmptyLogin = {\n    id: '',\n    password: '',\n};\n\nconst EmptyUser = {\n    id: '',\n    name: '',\n    type: '',\n    createdDatetime: '',\n    updatedDatetime: '',\n};\n\nexport default class AuthStore {\n    @observable login = Object.assign({}, EmptyLogin);\n    @observable loginState = State.NotAuthenticated;\n    @observable loginToken = '';\n    @observable loginUser = Object.assign({}, EmptyUser);\n\n    @action changeLoginId = (id) => {\n        this.login.id = id;\n    };\n\n    @action changeLoginPassword = (password) => {\n        this.login.password = password;\n    };\n\n    @action invalidateLogin = () => {\n        this.login = Object.assign({}, EmptyLogin);\n        this.loginState = State.NotAuthenticated;\n        this.loginToken = '';\n        this.loginUser = Object.assign({}, EmptyUser);\n    };\n\n\n\n    doSignup = flow(function* doSignup(callback, callback_failed) {\n        this.loginState = State.SignupPending;\n\n        try {\n            const response = yield axios.post('/api/v1/authentications/signup', EmptySignup);\n            if (response.status === 200) {\n                this.loginState = State.NotAuthenticated;\n                callback();\n            }\n        } catch (e) {\n            this.loginState = State.SignupFailed;\n            this.loginToken = '';\n            callback_failed();\n        }\n    });\n\n\n    doLogin = flow(function* doLogin() {\n        this.loginState = State.Pending;\n\n        try {\n            const param = this.login;\n            const response = yield axios.post('/api/v1/authentications/signin', param);\n            const token = response.data.token;\n            const user = response.data.user;\n\n            localStorage.setItem(LocalStorageTokenKey, token);\n\n            console.log('doLogin');\n            console.log(this);\n\n            this.loginState = State.Authenticated;\n            this.loginToken = token;\n            this.loginUser = user;\n        } catch (e) {\n            this.loginState = State.Failed;\n            this.loginToken = '';\n            this.loginUser = Object.assign({}, EmptyUser);\n        }\n    });\n\n    checkLogin = flow(function* checkLogin() {\n        const token = localStorage.getItem(LocalStorageTokenKey);\n\n        if(token) {\n            try {\n                const response = yield axios.get('/api/v1/authentications/signcheck');\n                const token = response.data.token;\n                const user = response.data.user;\n\n                this.loginState = State.Authenticated;\n                this.loginToken = token;\n                this.loginUser = user;\n            } catch(e) {\n                this.loginState = State.NotAuthenticated;\n                this.loginToken = '';\n                this.loginUser = Object.assign({}, EmptyUser);\n            }\n        }\n    });\n\n    doLogout = flow(function* doLogout() {\n        localStorage.removeItem(LocalStorageTokenKey);\n\n        try {\n            yield axios.post('/api/v1/authentications/signout');\n\n            console.log(this);\n            this.login = Object.assign({}, EmptyLogin);\n            this.loginState = State.NotAuthenticated;\n            this.loginToken = '';\n            this.loginUser = Object.assign({}, EmptyUser);\n        } catch(e) {\n            this.login = Object.assign({}, EmptyLogin);\n            this.loginState = State.NotAuthenticated;\n            this.loginToken = '';\n            this.loginUser = Object.assign({}, EmptyUser);\n        }\n    });\n}","import {action, observable} from \"mobx\";\n\nconst countryCode = [\n    { country: 'China', code: 'CN' },\n    { country: 'Taiwan', code: 'TW' },\n    { country: 'HongKong', code: 'HK' },\n    { country: 'United States', code: 'US' },\n];\n\n\nexport default class ProfileStore {\n    @observable isProfileDialog = false;\n    @observable teacherLessonList = [];\n\n    @action changeProfileDialog = (value) => this.isProfileDialog = value;\n\n\n\n}","import {action, flow, observable} from \"mobx\";\nimport axios from \"axios\";\n\n\nconst newUser = {\n    id: '',\n    password: '',\n    name: '',\n    email: '',\n    country: '',\n    city:'',\n    userLanguage:'',\n    selectedLanguage:'',\n    type: '',\n    createdDatetime: '',\n    updatedDatetime: '',\n};\n\n\nexport default class UserStore {\n\n    @observable addUser = Object.assign({}, newUser)\n\n    @action changeId = (id) => {this.addUser.id = id}\n    @action changePassword = (password) => {this.addUser.password = password}\n    @action changeName = (name) => {this.addUser.name = name}\n\n    signUp = flow(function* signUp(){\n        const param = this.addUser;\n        const response = yield axios.post('/api/v1/authentications/signup', param);\n\n\n    })\n}","import React from 'react';\nimport { default as AuthStore } from \"./AuthStore\";\nimport ProfileStore from \"./ProfileStore\";\nimport UserStore from \"./UserStore\";\nimport {MobXProviderContext} from \"mobx-react\";\n\nexport const stores = {\n    authStore:  new AuthStore(),\n    profileStore:  new ProfileStore(),\n    userStore: new UserStore(),\n};\n\nexport function useStores() {\n    return React.useContext(MobXProviderContext);\n}","import React from \"react\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport {inject, observer} from \"mobx-react\";\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst styles = (theme) => ({\n    dialog: {\n        '& .MuiDialog-paper': {\n            margin: 0,\n            width: '100%',\n            height: '100%',\n            borderRadius: 0,\n            float: 'top',\n            maxHeight: '100%',\n            minHeight: '100%',\n        },\n\n    },\n    title: {\n        padding: 12,\n        backgroundColor: '#27439f',\n        textAlign: 'center',\n        '& .MuiTypography-h6': {\n            fontFamily: 'Montserrat',\n            fontSize: 20,\n            fontWeight: 600,\n        },\n    },\n    root: {\n        width: '100%',\n    },\n\n});\n\n@inject(\"profileStore\")\n@observer\nclass ProfileDialog extends React.Component {\n    componentDidMount() {\n\n    }\n\n    render() {\n        const {classes, profileStore} = this.props;\n        return (\n            <Dialog fullScreen className={classes.dialog}\n                    open={profileStore.isProfileDialog}\n                    onClose={() => profileStore.changeProfileDialog(false)}\n                    disableBackdropClick={false}\n                    disableEscapeKeyDown={false}>\n                <DialogTitle className={classes.title}> <img src={\"logo192.png\"}  alt=\"??\"  style={{width: 33, height: 30}}/>\n                    <ClearIcon style={{float: 'right'}}\n                               onClick={() => profileStore.changeProfileDialog(false)}\n                    />\n                </DialogTitle>\n\n                <DialogContent style={{margin: 0, padding: 0}}>\n                    <div className={classes.root}>\n                        <Table>\n                            <thead>\n                            <TableRow>\n                                    <th>이름</th>\n                                    <th>현재 시간</th>\n                                    <th>현재 포인트</th>\n                                    <th><img src={\"logo192.png\"} alt={\"??\"} style={{width: 33, height: 30}}/></th>\n                            </TableRow>\n                            </thead>\n                            <tbody>\n                            <TableRow>\n                                <td> 이름</td>\n                                <td> 현재 시간</td>\n                                <td> 현재 포인트</td>\n                                <td><img src={\"logo192.png\"} alt={\"??\"} style={{width: 33, height: 30}}/></td>\n                            </TableRow>\n                            </tbody>\n                        </Table>\n                    </div>\n\n                </DialogContent>\n            </Dialog>\n        )\n    }\n}\n\nexport default withStyles(styles)(ProfileDialog);\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {AppBar, IconButton, Toolbar} from \"@material-ui/core\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport {observer} from \"mobx-react\";\nimport {useStores} from \"../stores\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport {AccountCircle, Search as SearchIcon} from \"@material-ui/icons\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport ProfileDialog from \"../views/ProfileDialog\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        backgroundColor: 'white',\n        color: 'red',\n        '& .MuiToolbar-gutters': {\n            paddingRight: 0,\n            paddingLeft: 0\n        },\n    },\n    toolBar: {\n        [theme.breakpoints.down(\"xs\")]: {},\n        height: '50px',\n        '& .MuiContainer-root': {\n            paddingRight: 0,\n            paddingLeft: 0,\n        },\n\n    },\n    formControl: {\n        [theme.breakpoints.down(\"xs\")]: {\n            width: '100%',\n        },\n        width: '50%',\n    },\n    inputBase: {\n        [theme.breakpoints.down(\"xs\")]: {\n            margin: '5px 0',\n        },\n        border: '1px solid gray',\n        margin: '10px 0',\n        padding: 5,\n        borderRadius: 5,\n\n    },\n    flexCenter: {\n        height: '100%',\n        display: \"flex\",\n        justifyContent: 'center',\n        justifyItems: 'center',\n    },\n    inlineCenter: {\n        display: 'inline-block',\n        margin: '0 auto',\n        textAlign: 'center',\n    },\n\n}));\n\nconst TopBar = observer((props) => {\n    const classes = useStyles();\n    const {mobileOpen, setMobileOpen, isLoggedIn, doLogout} = props;\n    const {profileStore} = useStores();\n    const history = useHistory();\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    return (\n        <AppBar position=\"fixed\" className={classes.appBar}>\n            <Toolbar>\n                <Container className={classes.flexCenter}>\n                    <Grid item xs={2} sm={1} className={classes.flexCenter}\n                          onClick={() => {history.push(\"/\")}}\n                    >\n                        <img src={\"logo192.png\"} alt=\"??\" style={{width: '60%', height: '40px', margin: 10}}/>\n                    </Grid>\n\n                    <Grid item xs={8} sm={10}\n                    >\n                        <FormControl className={classes.formControl}>\n                            <InputBase\n                                className={classes.inputBase}\n                                fullWidth\n                                placeholder={\"Language to Learn\"}\n                                inputProps={{'aria-label': 'search'}}\n                                endAdornment={<SearchIcon style={{color: 'red'}}/>}\n                            >\n                            </InputBase>\n                        </FormControl>\n                    </Grid>\n\n\n\n\n                    {isLoggedIn ? (\n\n                        <Grid item xs={4} sm={2}>\n                            <IconButton onClick={() => profileStore.changeProfileDialog(true)}>\n                                <AccountCircle/>\n                            </IconButton>\n\n                            <IconButton color=\"inherit\" onClick={doLogout}>\n                                <ExitToAppIcon/>\n                            </IconButton>\n                        </Grid>\n                    ) : (\n                        <Grid item xs={4} sm={2}>\n                            <div className={classes.flexCenter} style={{marginTop: 20}} onClick={() => {history.push(\"/signUp\")}} >\n                                JOIN\n                            </div>\n                        </Grid>\n                    )}\n\n\n                </Container>\n\n            </Toolbar>\n            <ProfileDialog/>\n        </AppBar>\n    );\n})\n\nexport default TopBar;","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport {Divider, Drawer, Hidden, List, ListItem, ListItemIcon, ListItemText, ListSubheader, Toolbar} from \"@material-ui/core\";\nimport {makeStyles, useTheme} from \"@material-ui/core/styles\";\nimport ComputerIcon from '@material-ui/icons/Computer';\n\nconst logoWidth = 129;\nconst logoHeight = 22;\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: theme.drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        width: theme.drawerWidth,\n        paddingLeft: 0,\n        paddingRight: 0,\n        ...theme.mixins.toolbar,\n    },\n    drawerPaper: {\n        width: theme.drawerWidth,\n        height: '100%',\n        border: 'none',\n    },\n    toolbar: {\n        width: theme.drawerWidth,\n        backgroundColor: theme.palette.primary.main,\n        paddingLeft: 0,\n        paddingRight: 0,\n        boxShadow: '0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)',\n    },\n    logo: {\n        width: logoWidth,\n        height: logoHeight,\n        marginLeft: (theme.drawerWidth - logoWidth) / 2,\n        marginRight: (theme.drawerWidth - logoWidth) / 2,\n    },\n    menu: {\n        borderRight: '1px solid rgba(0,0,0,0.12)',\n        height: '100%',\n    },\n\n    link: {\n        textDecoration: 'none',\n        color: 'inherit',\n    },\n}));\n\nexport default function SideMenu(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const { mobileOpen, setMobileOpen, isLoggedIn } = props;\n\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    const drawer = (\n        <div className={classes.menu}>\n            <List>\n                <ListSubheader inset>관리</ListSubheader>\n\n                <Link to=\"/home\" className={classes.link}>\n                    <ListItem button>\n                        <ListItemIcon><ComputerIcon /></ListItemIcon>\n                        <ListItemText primary=\"홈\"></ListItemText>\n                    </ListItem>\n                </Link>\n            </List>\n\n            <Divider />\n        </div>\n    );\n\n    return (\n        <nav className={classes.drawer} aria-label=\"mailbox folders\">\n            <Hidden smUp implementation=\"css\">\n\n                <Drawer variant=\"temporary\"\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                        open={mobileOpen}\n                        onClose={handleDrawerToggle}\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        ModalProps={{\n                            keepMounted: true, // Better open performance on mobile.\n                        }}\n                >\n                    <Toolbar className={classes.toolbar}>\n                        <Link to='/' className={classes.link}>\n                            <img src=\"/images/aether_white.png\" alt=\"AetherIT\" className={classes.logo}/>\n                        </Link>\n                    </Toolbar>\n                    {isLoggedIn ? (\n                        drawer\n                    ) : (\n                        ''\n                    )}\n                </Drawer>\n            </Hidden>\n            <Hidden xsDown implementation=\"css\">\n                <Drawer variant=\"permanent\"\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n\n                        open\n                >\n                    <Toolbar className={classes.toolbar}>\n                        <Link to='/' className={classes.link}>\n                            <img src=\"/images/aether_white.png\" alt=\"AetherIT\" className={classes.logo}/>\n                        </Link>\n                    </Toolbar>\n                    {isLoggedIn ? (\n                        drawer\n                    ) : (\n                        ''\n                    )}\n                </Drawer>\n            </Hidden>\n        </nav>\n    );\n};","import React from \"react\";\n\nclass ScrollToTop extends React.Component {\n    componentDidUpdate(prevProps) {\n        if (this.props.location.pathname !== prevProps.location.pathname) {\n            window.scrollTo(0, 0);\n        }\n    }\n\n    render() {\n        return this.props.children;\n    }\n}\n\nexport default ScrollToTop;\n","import React from \"react\";\n\nexport default function ReactPayPal() {\n    const [paid, setPaid] = React.useState(false);\n    const [error, setError] = React.useState(null);\n    const paypalRef = React.useRef();\n\n    // To show PayPal buttons once the component loads\n    React.useEffect(() => {\n        window.paypal\n            .Buttons({\n                createOrder: (data, actions) => {\n                    return actions.order.create({\n                        intent: \"CAPTURE\",\n                        purchase_units: [\n                            {\n                                description: \"Your description\",\n                                amount: {\n                                    currency_code: \"TWD\",\n                                    value: 1,\n                                },\n                            },\n                        ],\n                    });\n                },\n                onApprove: async (data, actions) => {\n                    const order = await actions.order.capture();\n                    setPaid(true);\n                    console.log(order);\n                },\n                onError: (err) => {\n                    //   setError(err),\n                    console.error(err);\n                },\n            })\n            .render(paypalRef.current);\n    }, []);\n\n    // If the payment has been made\n    if (paid) {\n        return <div>Payment successful.!</div>;\n    }\n\n    // If any error occurs\n    if (error) {\n        return <div>Error Occurred in processing payment.! Please try again.</div>;\n    }\n\n    // Default Render\n    return (\n        <div>\n            <h4>tuition: 1TWD</h4>\n            <div ref={paypalRef} />\n        </div>\n    );\n}\n","import React from \"react\";\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\n\nimport {Container, Toolbar, Typography} from \"@material-ui/core\";\nimport ReactPayPal from \"../components/reactPayPal\";\nimport Card from \"@material-ui/core/Card\";\nimport Grid from \"@material-ui/core/Grid\";\n\n\nconst styles = theme => ({\n    mainContainer: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    mainContent: {\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    toolbar: {\n        width: '100%',\n    },\n    lessonCard: {\n        width: '100%',\n        padding: theme.spacing(3),\n    },\n    cardContainer: {\n        height: '100%',\n        display: \"flex\",\n        justifyContent: 'center',\n        justifyItems: 'center',\n        margin: '5px',\n    },\n});\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            checkout: false,\n        };\n    }\n\n    componentDidMount() {\n        this.props.enqueueSnackbar(\"Welcome\", {\n            variant: 'info'\n        });\n    }\n\n    render() {\n        const {classes} = this.props;\n\n        return (\n            <React.Fragment>\n                <Container component=\"main\" className={classes.mainContainer}>\n                    <div className={classes.appBarSpacer}/>\n                    <div className={classes.mainContent}>\n                        <Typography variant=\"h4\" component=\"h2\">\n\n                        </Typography>\n\n                        {/*paypal button*/}\n                        {(this.state.checkout === true)\n                            ? <div className=\"payment-div\">\n                                <ReactPayPal/>\n                            </div>\n\n                            : <div>\n                                <h1>React-PayPal</h1>\n                                <button onClick={() => {\n                                    this.setState({checkout: true})\n                                }} className=\"checkout-button\">Checkout\n                                </button>\n                            </div>\n                        }\n                        {/*{this.props.profileStore.teacherLessonList.length !== 0 ?*/}\n                        {/*    this.props.profileStore.teacherLessonList.map((data,index) => {*/}\n                        {/*       return  <Card key={index}> {data} </Card>})*/}\n                        {/*    : ''*/}\n                        {/*}*/}\n                        {/*슬라이드로 처*/}\n                        <Grid container item xs={12}>\n                            <Grid item xs={3} className={classes.cardContainer}>\n                                <Card className={classes.lessonCard}>dd</Card>\n                            </Grid>\n                            <Grid item xs={3} className={classes.cardContainer}>\n                                <Card className={classes.lessonCard}>dd</Card>\n                            </Grid>\n                            <Grid item xs={3} className={classes.cardContainer}>\n                                <Card className={classes.lessonCard}>dd</Card>\n                            </Grid>\n                            <Grid item xs={3} className={classes.cardContainer}>\n                                <Card className={classes.lessonCard}>dd</Card>\n                            </Grid>\n                        </Grid>\n\n\n                    </div>\n                </Container>\n\n            </React.Fragment>\n    );\n    }\n    };\n\n    export default withSnackbar(withRouter(withStyles(styles) (Home)));","import React from \"react\";\nimport {withSnackbar} from \"notistack\";\nimport {withRouter} from \"react-router-dom\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {inject, observer} from \"mobx-react\";\nimport {Avatar, Button, CircularProgress, Container, TextField, Toolbar, Typography} from \"@material-ui/core\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport * as store from \"../stores/AuthStore\";\n\nconst style = theme => ({\n    appBarSpacer: theme.mixins.toolbar,\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    lockOpenAvatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.main,\n    },\n    lockOutAvatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n});\n\n\n\n\n@inject('authStore')\n@observer\nclass SignIn extends React.Component {\n\n    handleChangeId = (e) => {\n        this.props.authStore.changeLoginId(e.target.value);\n    }\n\n    handleChangePassword = (e) => {\n        this.props.authStore.changeLoginPassword(e.target.value);\n    }\n\n    handleKeyUpPassword = (e) => {\n        if(e.keyCode === 13) {\n            this.props.authStore.doLogin();\n        }\n    }\n\n    handleSubmitForm = (e) => {\n        this.props.authStore.doLogin();\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { loginState, login } = this.props.authStore;\n\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <div className={classes.appBarSpacer} />\n                <div className={classes.paper}>\n                    <Avatar className={classes.lockOutAvatar}><LockOutlinedIcon/></Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        {loginState === store.State.Failed ? 'Sign in failed.' : 'Please sign in.'}\n                    </Typography>\n                    <div className={classes.form}>\n                        <TextField id=\"id\"\n                                   name=\"id\"\n                                   label=\"ID\"\n                                   variant=\"outlined\"\n                                   margin=\"normal\"\n                                   value={login.id}\n                                   onChange={this.handleChangeId}\n                                   required fullWidth />\n                        <TextField id=\"password\"\n                                   name=\"password\"\n                                   label=\"Password\"\n                                   type=\"password\"\n                                   variant=\"outlined\"\n                                   margin=\"normal\"\n                                   value={login.password}\n                                   onChange={this.handleChangePassword}\n                                   onKeyUp={this.handleKeyUpPassword}\n                                   required fullWidth />\n                        <Button type=\"submit\"\n                                className={classes.submit}\n                                color=\"primary\"\n                                variant=\"contained\"\n                                disabled={loginState === store.State.Pending}\n                                onClick={this.handleSubmitForm}\n                                fullWidth >\n                            {loginState === store.State.Pending ? <CircularProgress size={22}/> : 'Sign In'}\n                        </Button>\n\n                       <p>\n                           <a href={\"https://us02web.zoom.us/j/86488848804?pwd=dWpBR00xU2VVK0doNVY5ZlkrMmlwZz09\"}>\n                               room</a></p>\n                    </div>\n\n                </div>\n\n\n            </Container>\n        );\n    }\n};\n\nexport default withSnackbar(withRouter(withStyles(style) (SignIn)));","import React from \"react\";\nimport {inject, observer} from \"mobx-react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TextField from \"@material-ui/core/TextField\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\nimport Select from \"@material-ui/core/Select\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport Button from \"@material-ui/core/Button\";\n\nconst style = theme => ({\n    paper: {\n        margin: 20,\n        marginTop: 100,\n        padding: 20,\n        border: '1px solid black'\n    },\n\n});\n\nconst countryCode = [\n    { country: 'China', code: 'CN' },\n    { country: 'Taiwan', code: 'TW' },\n    { country: 'HongKong', code: 'HK' },\n    { country: 'United States', code: 'US' },\n];\n\n@inject('authStore')\n@observer\nclass SignUp extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n    }\n\n\n    render() {\n        const {classes} = this.props;\n\n        return (\n            <TableContainer component={Paper} className={classes.paper}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align={'center'} colSpan={2}>加入會員</TableCell>\n                            {/*<TableCell align={'center'}></TableCell>*/}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell>ID</TableCell>\n                            <TableCell>\n                                <TextField></TextField>\n                                {/* 아이디가 중복일 떄, 메시지 출력 */}\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>密碼</TableCell>\n                            <TableCell>\n                                    <InputLabel>密碼</InputLabel>\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>確認密碼</TableCell>\n                            <TableCell>\n                                <TextField></TextField>\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>電子郵件</TableCell>\n                            <TableCell>\n                                <TextField></TextField>\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>姓名</TableCell>\n                            <TableCell>\n                                <TextField></TextField>\n                            </TableCell>\n                        </TableRow>\n                        {/*country (select로 고르기)   https://restcountries.eu/rest/v2  : 여기서 목록 출력!! */}\n                        {/*city  (직접입력)\t*/}\n                        {/*user_language  (select로 고르기)\t*/}\n                        {/*selected_language  (select로 고르기)*/}\n\n                        <TableRow>\n                            <TableCell>地區</TableCell>\n                            <TableCell>\n                                <FormControl variant=\"filled\" className={classes.formControl}>\n                                    <InputLabel htmlFor=\"filled-age-native-simple\">地區</InputLabel>\n                                    <Select\n                                        native\n                                        // value={state.age}\n                                        // onChange={handleChange}\n                                        inputProps={{\n                                            name: 'age',\n                                            id: 'filled-age-native-simple',\n                                        }}\n                                    >\n                                        <option aria-label=\"None\" value=\"\" />\n                                        <option value={10}>中國大陸</option>\n                                        <option value={20}>台灣</option>\n                                        <option value={30}>香港</option>\n                                        <option value={40}>新加坡</option>\n                                    </Select>\n                                </FormControl>\n                            </TableCell>\n                        </TableRow>\n                    </TableBody>\n                    <TableFooter>\n                        <TableRow>\n                            <TableCell align={'center'} colSpan={2}><Button onClick={()=>{this.props.authStore.doSignup()}}>加入</Button></TableCell>\n                        </TableRow>\n                    </TableFooter>\n                </Table>\n            </TableContainer>\n\n        )\n    }\n}\n\nexport default withStyles(style)(SignUp);\n","import React from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport {inject, observer} from \"mobx-react\";\n\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {CssBaseline} from \"@material-ui/core\";\n\nimport axios from \"axios\";\n\nimport TopBar from \"./components/TopBar\";\nimport SideMenu from \"./components/SideMenu\";\nimport ScrollToTop from \"./components/ScrollToTop\";\nimport Home from \"./views/Home\";\nimport SignIn from \"./views/SignIn\";\nimport SignUp from \"./views/SignUp\";\nimport * as store from \"./stores/AuthStore\";\n\n\nconst style = () => ({\n    root: {\n        display: 'flex',\n    }\n});\n\n\n@inject('authStore')\n@observer\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            mobileOpen: false,\n        };\n\n        this.setMobileOpen = this.setMobileOpen.bind(this);\n    }\n\n    componentDidMount() {\n        const axiosRequestInterceptors = (config) => {\n            const token = localStorage.getItem(store.LocalStorageTokenKey);\n\n            if (token) {\n                config.headers['X-Auth-Token'] = token;\n            }\n\n            return config;\n        };\n\n        const axiosRequestErrorHandler = (error) => {\n            return Promise.reject(error);\n        };\n\n        const axiosResponseInterceptor = (response) => {\n            if (response.status === 403) {\n                this.props.authStore.invalidateLogin();\n            }\n\n            return response;\n        };\n\n        const axiosResponseErrorHandler = (error) => {\n            if ((error.response) && (error.response.status === 403)) {\n                this.props.authStore.invalidateLogin();\n            }\n\n            return Promise.reject(error);\n        };\n\n        console.log(\"========== RGate App componentDidMount ==========\");\n        axios.interceptors.request.use(axiosRequestInterceptors, axiosRequestErrorHandler);\n        axios.interceptors.response.use(axiosResponseInterceptor, axiosResponseErrorHandler);\n\n        this.props.authStore.checkLogin();\n    }\n\n    setMobileOpen(mobileOpen) {\n        this.setState({mobileOpen: mobileOpen});\n    }\n\n    render() {\n        const {classes} = this.props;\n        const {loginState} = this.props.authStore;\n\n        return (\n            <div className={classes.root}>\n                <Router>\n                    <CssBaseline/>\n\n                    <Route path=\"/\" component={ScrollToTop}>\n                        <TopBar mobileOpen={this.state.mobileOpen}\n                                setMobileOpen={this.setMobileOpen}\n                                isLoggedIn={loginState === store.State.Authenticated}\n                                doLogout={() => this.props.authStore.doLogout()}/>\n                        {/*<SideMenu mobileOpen={this.state.mobileOpen}*/}\n                        {/*          setMobileOpen={this.setMobileOpen}*/}\n                        {/*          isLoggedIn={loginState === store.State.Authenticated} />*/}\n\n                        {loginState === store.State.Authenticated ? (\n                            <React.Fragment>\n                                <Switch>\n                                    <Route exact path=\"/\" component={Home}/>\n                                    <Route exact path=\"/home\" component={Home}/>\n                                </Switch>\n                            </React.Fragment>\n                        ) : (\n                            <React.Fragment>\n                                <Switch>\n                                    <Route exact path=\"/\" component={SignIn}/>\n                                    <Route exact path=\"/signUp\" component={SignUp}/>\n                                </Switch>\n                            </React.Fragment>\n                        )}\n                    </Route>\n                </Router>\n            </div>\n        );\n    }\n};\n\nexport default withStyles(style)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {configure} from \"mobx\";\nimport {Provider as MobxProvider} from \"mobx-react\";\nimport {ThemeProvider} from \"@material-ui/core/styles\";\nimport {SnackbarProvider} from \"notistack\";\nimport {stores} from \"./stores\";\nimport configureTheme from \"./configureTheme\";\n\nconfigure({enforceActions: \"always\"});\n\nconst theme = configureTheme();\n\nReactDOM.render(\n    <MobxProvider {...stores}>\n        <ThemeProvider theme={theme}>\n            <SnackbarProvider maxSnack={3} anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n            }}>\n                <App />\n            </SnackbarProvider>\n        </ThemeProvider>\n    </MobxProvider>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {createMuiTheme} from \"@material-ui/core\";\n\nexport default function configureTheme() {\n    return createMuiTheme({\n        drawerWidth: 240,\n    });\n};\n"],"sourceRoot":""}